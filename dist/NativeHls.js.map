{"version":3,"sources":["webpack:///webpack/bootstrap d9aad18bbb4bc9452943","webpack:///./index.js","webpack:///./src/js/NativeHls.js","webpack:///./src/js/models/Id3Tag.js","webpack:///./src/js/utils/M3u8Parser.js","webpack:///./src/js/utils/isAdItem.js","webpack:///./package.json"],"names":["POLL_INTERVAL","NativeHls","config","meister","next","manifestParsed","audioMode","previousLevel","lowestLevel","dvrThreshold","mediaDuration","endTime","beginTime","mediaSequence","lastMediaSequence","childManifest","qualityStreams","masterPlaylist","baseEndTime","manifestTimeoutId","pollResolutionId","currentResolution","width","height","name","events","item","Promise","resolve","type","supported","errorCode","Meister","ErrorCodes","WRONG_TYPE","browser","isSafari","isiOS","safariDesktopDisabled","isFacebook","NOT_SUPPORTED","drm","drmConfig","one","supportedDRMSystems","Object","keys","forEach","key","NO_DRM","trigger","previousMetadata","then","newItem","player","getPlayerByType","audioOnly","mediaType","catch","err","console","error","mediaElement","currentPlaylistItem","playlist","list","index","isMobile","src","on","onRequestBitrate","bind","onRequestGoLive","textTracks","addEventListener","onAddTextTrack","setInterval","pollResolution","loadManifest","manifest","keyInfo","URI","drmServerUrl","replace","fairplay","duration","segments","length","hasDVR","isLive","dvrEnabled","modifiedDuration","startFromBeginning","onRequestSeek","relativePosition","offset","isNaN","currentTime","setTimeout","getNewManifest","playOffset","e","targetTime","Number","isFinite","timeOffset","forcedStart","blockSeekForward","event","track","mode","cueChangeEvent","target","activeCues","Array","from","filter","cue","id3Tags","map","value","data","startTime","previousCurrentTime","wasPlaying","playing","playerPlugin","bitrateIndex","utils","resolveUrl","url","play","pause","warn","details","fatal","videoHeight","videoWidth","newBitrate","find","stream","resolution","newBitrateIndex","indexOf","parseInt","bandwith","amountOfNewSegments","i","fetch","response","text","m3u8","parse","streams","filterAudioOnly","onQualitysAvailable","bitrates","bitrate","unshift","currentIndex","clearTimeout","clearInterval","remove","NaN","time","version","MediaPlugin","registerPlugin","pluginName","Id3Tag","extractKeyInfo","keyLine","split","reduce","result","keyValString","firstEqualIndex","substring","val","M3u8Parser","lines","nextLineIsStream","previousMediaNumber","streamInfo","line","push","startsWith","matchBandwith","exec","matchResolution","resolutions","resolutionInfo","matchInfo","parseFloat","matchMediaSequence","isAdItem","parallel","parallelItem"],"mappings":"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","file":"dist/NativeHls.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d9aad18bbb4bc9452943","import NativeHls from './src/js/NativeHls';\n\nexport default NativeHls;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import M3u8Parser from './utils/M3u8Parser';\nimport packageJson from '../../package.json';\nimport isAdItem from './utils/isAdItem';\nimport Id3Tag from './models/Id3Tag';\n\nconst POLL_INTERVAL = 1000;\n\nclass NativeHls extends Meister.MediaPlugin {\n    constructor(config, meister, next) {\n        super(config, meister);\n\n        this.manifestParsed = false;\n\n        this.audioMode = false;\n\n        // Middleware promise chain.\n        this.next = next;\n\n        // -1 for automatic quality selection\n        this.previousLevel = -1;\n        this.lowestLevel = 0;\n\n        this.dvrThreshold = this.config.dvrThreshold;\n\n        if (typeof this.dvrThreshold === 'undefined') {\n            this.dvrThreshold = 300;\n        }\n\n        // new\n        this.mediaDuration = 0;\n        this.endTime = 0;\n        this.beginTime = 0;\n        this.mediaSequence = 0;\n        this.lastMediaSequence = 0;\n        this.childManifest = null;\n        this.qualityStreams = [];\n        this.masterPlaylist = null;\n\n        this.baseEndTime = 0;\n\n        this.manifestTimeoutId = null;\n\n        // Keep track of the current playback quality.\n        this.pollResolutionId = null;\n        this.currentResolution = {\n            width: 0,\n            height: 0,\n        };\n\n        this.name = 'nativeHLS';\n        this.events = [];\n    }\n\n    static get pluginName() {\n        return 'NativeHls';\n    }\n\n    static get pluginVersion() {\n        return packageJson.version;\n    }\n\n    isItemSupported(item) {\n        return new Promise((resolve) => {\n            if (item.type !== 'm3u8' && item.type !== 'm3u') {\n                resolve({\n                    supported: false,\n                    errorCode: Meister.ErrorCodes.WRONG_TYPE,\n                });\n            }\n\n            // Non Safari browsers are not supported.\n            if ((!this.meister.browser.isSafari)\n                // When safariDesktopDisabled is true and it's not iOS disable it.\n                || (!this.meister.browser.isiOS && this.config.safariDesktopDisabled)\n            ) {\n                // Make sure we are not in Facebook mode. Where the User agent is modified.\n                // This means we are Safari on iOS but no indication of it in the user agent.\n                // Allow these browsers to pass.\n                if (!this.meister.browser.isFacebook && !this.meister.browser.isiOS) {\n                    resolve({\n                        supported: false,\n                        errorCode: Meister.ErrorCodes.NOT_SUPPORTED,\n                    });\n                }\n            }\n\n            if (item.drm || item.drmConfig) {\n                this.meister.one('drmKeySystemSupport', (supportedDRMSystems) => {\n                    let supported = false;\n                    Object.keys(supportedDRMSystems).forEach((key) => {\n                        if ((key === 'com.apple.fps' && supportedDRMSystems[key]) ||\n                            (key === 'com.apple.fps.1_0' && supportedDRMSystems[key]) ||\n                            (key === 'com.apple.fps.2_0' && supportedDRMSystems[key])) {\n                            supported = true;\n                        }\n                    });\n                    resolve({\n                        supported,\n                        errorCode: supported ? null : Meister.ErrorCodes.NO_DRM,\n                    });\n                });\n\n                this.meister.trigger('requestDrmKeySystemSupport', {});\n            } else {\n                resolve({\n                    supported: true,\n                });\n            }\n        });\n    }\n\n    resetPrivates() {\n        this.previousMetadata = null;\n\n        this.manifestParsed = false;\n\n        this.previousLevel = -1;\n        this.lowestLevel = 0;\n        this.mediaDuration = 0;\n        this.item = null;\n    }\n\n    process(item) {\n        return this.next(item).then((newItem) => {\n            this.player = this.meister.getPlayerByType('html5', newItem);\n            if (this.meister.config.audioOnly || newItem.mediaType === 'audio') {\n                this.audioMode = true;\n            } else {\n                this.audioMode = false;\n            }\n\n            return newItem;\n        }).catch((err) => {\n            console.error(`Something went wrong while processing middlewares. ${err}`);\n        });\n    }\n\n    async load(item) {\n        super.load(item);\n        this.item = item;\n\n        this.mediaElement = this.player.mediaElement;\n\n        // // The current playlist item\n        const currentPlaylistItem = this.meister.playlist.list[this.meister.playlist.index];\n        // PLEASE NOTE:\n        // This is NOT the same as is done in DASH or HLS.\n        // If the event is handled on Safari MAC (with livestreams and ADS) it won't start playback after the preroll\n        // However; safari on iOS won't start if the event isn't handled, so.. nice going Apple :(\n        if (isAdItem(currentPlaylistItem) && (this.meister.browser.isMobile && this.meister.browser.isSafari)) {\n            this.one('GoogleIma:initialUserActionCompleted', () => {\n                this.mediaElement.src = item.src;\n            });\n        } else {\n            this.mediaElement.src = item.src;\n        }\n\n        this.masterPlaylist = item.src;\n\n        // Listen to control events.\n        this.on('requestBitrate', this.onRequestBitrate.bind(this));\n        this.on('requestGoLive', () => this.onRequestGoLive());\n\n        this.mediaElement.textTracks.addEventListener('addtrack', this.onAddTextTrack.bind(this));\n\n        this.pollResolutionId = setInterval(this.pollResolution.bind(this), POLL_INTERVAL);\n\n        // Trigger this to make it look pretty.\n        // Loading the first playlist.\n        const manifest = await this.loadManifest(item.src);\n\n        if (manifest.keyInfo) {\n            if (manifest.keyInfo.URI) {\n                const drmServerUrl = manifest.keyInfo.URI.replace('skd:', 'https:');\n\n                this.meister.trigger('drmLicenseInfoAvailable', {\n                    fairplay: {\n                        drmServerUrl,\n                    },\n                });\n            }\n        }\n\n        this.endTime = manifest.duration;\n        this.baseEndTime = this.endTime;\n        this.mediaDuration = manifest.duration;\n        this.mediaSequence = manifest.mediaSequence;\n\n        this.beginTime = this.endTime - this.mediaDuration;\n\n        // Kinda weird, but let's roll with it for now..\n        const lastMediaSequence = Object.keys(manifest.segments)[(Object.keys(manifest.segments).length - 1)];\n        this.lastMediaSequence = lastMediaSequence;\n\n        let hasDVR = ((manifest.duration > this.dvrThreshold) && manifest.isLive);\n\n        if (this.config.dvrEnabled === false) {\n            hasDVR = false;\n        }\n\n        this.meister.trigger('itemTimeInfo', {\n            isLive: manifest.isLive,\n            hasDVR,\n            duration: this.mediaDuration,\n            modifiedDuration: this.mediaDuration,\n            endTime: this.endTime,\n        });\n\n        // We don't want to request live when we want to start from the beginning.\n        if (!item.startFromBeginning) {\n            // this.onMasterPlaylistLoaded(manifest);\n            if (manifest.isLive) this.onRequestGoLive();\n        } else if (typeof item.startFromBeginning === 'object') {\n            this.onRequestSeek({\n                relativePosition: item.startFromBeginning.offset / this.duration,\n            });\n        } else if (isNaN(this.meister.duration)) {\n            this.meister.one('playerCanPlay', () => {\n                this.meister.currentTime = 0;\n            });\n        } else {\n            this.meister.currentTime = 0;\n        }\n\n        this.manifestTimeoutId = setTimeout(() => {\n            this.getNewManifest();\n        }, 5000); // Amount of seconds should be dynamic (By using the manifest)\n    }\n\n    get duration() {\n        return this.mediaDuration;\n    }\n\n    get currentTime() {\n        if (!this.player) { return NaN; }\n\n        const playOffset = this.endTime - this.mediaDuration;\n        return this.player.currentTime - playOffset;\n    }\n\n    set currentTime(time) {\n        if (!this.player) { return; }\n\n        const playOffset = this.endTime - this.mediaDuration;\n        this.player.currentTime = time + playOffset;\n    }\n\n    _onPlayerTimeUpdate() {\n        const playOffset = this.endTime - this.mediaDuration;\n\n        this.meister.trigger('playerTimeUpdate', {\n            currentTime: this.player.currentTime - playOffset,\n            duration: this.mediaDuration,\n        });\n    }\n\n    _onPlayerSeek() {\n        const playOffset = this.endTime - this.mediaDuration;\n\n        const currentTime = this.player.currentTime - playOffset;\n        const duration = this.mediaDuration;\n        const relativePosition = currentTime / duration;\n\n        this.meister.trigger('playerSeek', {\n            relativePosition,\n            currentTime,\n            duration,\n        });\n    }\n\n    onRequestSeek(e) {\n        let targetTime;\n\n        if (Number.isFinite(e.relativePosition)) {\n            const playOffset = this.endTime - this.mediaDuration;\n            targetTime = (this.mediaDuration * e.relativePosition) + playOffset;\n        } else if (Number.isFinite(e.timeOffset)) {\n            targetTime = this.player.currentTime + e.timeOffset;\n        } else if (Number.isFinite(e.targetTime)) {\n            const playOffset = this.endTime - this.mediaDuration;\n            targetTime = e.targetTime + playOffset;\n        }\n\n        // Check whether we are allowed to seek forward.\n        if (!e.forcedStart && this.blockSeekForward && targetTime > this.player.currentTime) { return; }\n\n        if (Number.isFinite(targetTime)) {\n            this.player.currentTime = targetTime;\n        }\n    }\n\n    /**\n     * Event handler for addtrack\n     *\n     * @param {TrackEvent} event\n     * @memberof NativeHls\n     */\n    onAddTextTrack(event) {\n        const track = event.track;\n        track.mode = 'hidden';\n\n        track.addEventListener('cuechange', (cueChangeEvent) => {\n            /** @type {TextTrack} */\n            const target = cueChangeEvent.target;\n            const activeCues = Array.from(target.activeCues).filter(cue => cue.type === 'org.id3');\n            const id3Tags = activeCues.map(cue => new Id3Tag(cue.value.key, cue.value.data, cue.startTime, cue.endTime));\n\n            this.meister.trigger('id3Tags', id3Tags);\n        });\n    }\n\n    onRequestGoLive() {\n        if (isNaN(this.player.duration)) {\n            this.meister.one('playerLoadedMetadata', () => {\n                this.onRequestGoLive();\n            });\n        } else {\n            this.player.currentTime = this.endTime - 30;\n        }\n    }\n\n    onRequestBitrate(e) {\n        const previousCurrentTime = this.player.currentTime;\n        const wasPlaying = this.meister.playing;\n\n        // Since we're setting a new source we could need updated drm settings.\n        if (e.drmConfig) {\n            this.meister.trigger('drmConfig', e.drmConfig);\n        }\n\n        this.meister.playerPlugin.mediaElement.src = '';\n        if (e.bitrateIndex === -1) {\n            this.meister.playerPlugin.mediaElement.src = this.masterPlaylist;\n        } else {\n            this.meister.playerPlugin.mediaElement.src = this.meister.utils.resolveUrl(this.masterPlaylist, this.qualityStreams[e.bitrateIndex].url);\n        }\n\n        // Reset playoffset and endtime, since we cleared the source.\n        this.playOffset = 0;\n        this.endTime = this.baseEndTime;\n\n        this.meister.one('playerLoadedMetadata', () => {\n            this.player.currentTime = previousCurrentTime;\n\n            if (wasPlaying) {\n                this.meister.play();\n            } else {\n                this.meister.pause();\n            }\n        });\n    }\n\n    onError(e, data) {\n        console.warn(`Error in ${this.name}, type: ${data.details}, will attempt to recover.`);\n        if (data.fatal) {\n            console.error(`Can not recover from ${data.type}: ${data.details}.`);\n        }\n    }\n\n    pollResolution() {\n        const height = this.mediaElement.videoHeight;\n        const width = this.mediaElement.videoWidth;\n\n        if (this.currentResolution.width === width && this.currentResolution.height === height) {\n            return;\n        }\n\n        const newBitrate = this.qualityStreams.find(stream => stream.resolution && stream.resolution.width === width && stream.resolution.height === height);\n\n        // This can happen while switching streams, no need to notify the player.\n        if (!newBitrate) {\n            return;\n        }\n\n        const newBitrateIndex = this.qualityStreams.indexOf(newBitrate);\n\n        this.meister.trigger('playerAutoSwitchBitrate', {\n            newBitrate: parseInt(newBitrate.bandwith, 10),\n            newBitrateIndex,\n        });\n\n        this.currentResolution = newBitrate.resolution;\n    }\n\n    // copypaste from native-hls\n    async getNewManifest() {\n        try {\n            const manifest = await this.loadManifest(this.childManifest);\n            const lastMediaSequence = Object.keys(manifest.segments)[(Object.keys(manifest.segments).length - 1)];\n            const amountOfNewSegments = lastMediaSequence - this.lastMediaSequence;\n\n            for (let i = 0; i < amountOfNewSegments; i += 1) {\n                this.endTime += manifest.segments[Object.keys(manifest.segments)[i]];\n            }\n\n            // Just for testing purposes:\n            this.mediaDuration = manifest.duration;\n            this.beginTime = this.endTime - manifest.duration;\n            this.lastMediaSequence = lastMediaSequence;\n\n            let hasDVR = ((manifest.duration > this.dvrThreshold) && manifest.isLive);\n\n            if (this.config.dvrEnabled === false) {\n                hasDVR = false;\n            }\n\n            this.meister.trigger('itemTimeInfo', {\n                isLive: manifest.isLive,\n                hasDVR,\n                duration: this.mediaDuration,\n                modifiedDuration: this.mediaDuration,\n                endTime: this.endTime,\n            });\n\n            this.manifestTimeoutId = setTimeout(() => {\n                this.getNewManifest();\n            }, 5000);\n        } catch (err) {\n            console.warn('WARNING: Could not load manifest, retrying loading manifest.', err);\n            this.manifestTimeoutId = setTimeout(() => {\n                this.getNewManifest();\n            }, 5000);\n        }\n    }\n\n    // copypaste from native-hls\n    async loadManifest(src) {\n        const response = await fetch(src);\n        const text = await response.text();\n\n        const m3u8 = new M3u8Parser(text);\n        const manifest = m3u8.parse();\n\n        if (manifest.streams.length) {\n            if (this.config.filterAudioOnly) {\n                this.qualityStreams = manifest.streams.filter(stream => stream.resolution);\n            } else {\n                this.qualityStreams = manifest.streams;\n            }\n\n            this.onQualitysAvailable();\n\n            this.childManifest = this.meister.utils.resolveUrl(src, manifest.streams[0].url);\n            // This is the master playlist we need to parse the sub playlist.\n            return this.loadManifest(this.meister.utils.resolveUrl(src, manifest.streams[0].url));\n        }\n\n        return manifest;\n    }\n\n    // copypaste from native-hls\n    onQualitysAvailable() {\n        const bitrates = this.qualityStreams.map((bitrate, index) => ({\n            bitrate: parseInt(bitrate.bandwith, 10),\n            index,\n        }));\n\n        // Bitrate 0 means auto quality.\n        bitrates.unshift({\n            bitrate: 0,\n            index: -1,\n        });\n\n        // Trigger auto bitrate by default.\n        this.meister.trigger('itemBitrates', {\n            bitrates,\n            currentIndex: -1,\n        });\n    }\n\n    unload() {\n        super.unload();\n\n        if (this.manifestTimeoutId) {\n            clearTimeout(this.manifestTimeoutId);\n        }\n\n        if (this.pollResolutionId) {\n            clearInterval(this.pollResolutionId);\n        }\n\n        this.meister.remove(this.events);\n\n        this.mediaDuration = 0;\n        this.endTime = 0;\n        this.baseEndTime = 0;\n        this.beginTime = 0;\n        this.mediaSequence = 0;\n        this.lastMediaSequence = 0;\n        this.childManifest = null;\n        this.qualityStreams = [];\n        this.masterPlaylist = null;\n        this.manifestTimeoutId = null;\n        this.pollResolutionId = null;\n        this.currentResolution = {\n            width: 0,\n            height: 0,\n        };\n        this.mediaElement = null;\n    }\n\n    destroy() {\n        super.destroy();\n    }\n}\n\nMeister.registerPlugin(NativeHls.pluginName, NativeHls);\nMeister.registerPlugin('nativehls', NativeHls);\n\nexport default NativeHls;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/NativeHls.js","export default class Id3Tag {\n        /**\n     * Creates an instance of Id3Tag.\n     *\n     * @param {string} key\n     * @param {ArrayBuffer} data\n     * @param {number} [startTime=0]\n     * @param {number} [endTime=0]\n     * @memberof Id3Tag\n     */\n    constructor(key, data, startTime = 0, endTime = 0) {\n        this.data = data;\n        this.key = key;\n        this.type = 'org.id3';\n        this.startTime = startTime;\n        this.endTime = endTime;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/models/Id3Tag.js","function extractKeyInfo(keyLine) {\n    const keyInfo = keyLine.replace('#EXT-X-KEY:', '')\n    // All key value pairs are split with a ,\n    .split(',')\n    .reduce((result, keyValString) => {\n        // We only use the first equal sign per string\n        // Otherwise we might split something in an URL.\n        const firstEqualIndex = keyValString.indexOf('=');\n\n        // Retrieve key value pairs.\n        const key = keyValString.substring(0, firstEqualIndex);\n        const val = keyValString.substring(firstEqualIndex + 1);\n\n        // The values are displayed like: \"\"value\"\", so we remove the extra pair of \"\".\n        // eslint-disable-next-line no-param-reassign\n        result[key] = val.replace(/\"/g, '');\n\n        return result;\n    }, {});\n\n    return keyInfo;\n}\n\nclass M3u8Parser {\n    constructor(text) {\n        this.text = text;\n    }\n\n    parse() {\n        const lines = this.text.split('\\n');\n        const result = {\n            streams: [],\n            segments: {},\n            mediaSequence: 0,\n            duration: 0,\n            isLive: true,\n        };\n\n        let nextLineIsStream = false;\n        let previousMediaNumber = result.mediaSequence;\n        let streamInfo = {};\n\n        lines.forEach((line) => {\n            if (nextLineIsStream) {\n                streamInfo.url = line;\n                result.streams.push(streamInfo);\n                streamInfo = {};\n                nextLineIsStream = false;\n            }\n\n            if (line.startsWith('#EXT-X-STREAM-INF')) {\n                nextLineIsStream = true;\n            }\n\n            if (line.startsWith('#EXT-X-ENDLIST')) {\n                result.isLive = false;\n            }\n\n            if (line.startsWith('#EXT-X-KEY')) {\n                // Extracting the URI out of the key section\n                result.keyInfo = extractKeyInfo(line);\n            }\n\n            // #EXT-X-STREAM-INF:PROGRAM-ID=1,RESOLUTION=600x338,BANDWIDTH=712704\n            const matchBandwith = (/^#EXT-X-STREAM-INF:.*BANDWIDTH=(\\d*)?/).exec(line);\n            if (matchBandwith && matchBandwith[1]) {\n                const bandwith = matchBandwith[1];\n                streamInfo.bandwith = bandwith;\n            }\n\n            const matchResolution = (/^#EXT-X-STREAM-INF:.*RESOLUTION=(\\d*x\\d*)?/).exec(line);\n            if (matchResolution && matchResolution[1]) {\n                const resolutions = matchResolution[1].split('x');\n                if (resolutions.length < 2) {\n                    streamInfo.resolution = {\n                        width: 0,\n                        height: 0,\n                    };\n                } else {\n                    const resolutionInfo = {\n                        width: parseInt(resolutions[0], 10),\n                        height: parseInt(resolutions[1], 10),\n                    };\n\n                    streamInfo.resolution = resolutionInfo;\n                }\n            }\n\n            const matchInfo = (/^#EXTINF:?([0-9.]*)?,?(.*)?/).exec(line);\n            if (matchInfo && matchInfo[1]) {\n                result.segments[previousMediaNumber] = parseFloat(matchInfo[1]);\n                previousMediaNumber += 1;\n                result.duration += parseFloat(matchInfo[1]);\n            }\n\n            const matchMediaSequence = (/^#EXT-X-MEDIA-SEQUENCE:?(-?[0-9.]*)?/).exec(line);\n            if (matchMediaSequence && matchMediaSequence[1]) {\n                result.mediaSequence = parseInt(matchMediaSequence[1], 10);\n                previousMediaNumber = parseInt(matchMediaSequence[1], 10);\n            }\n        });\n\n        return result;\n    }\n}\n\nexport default M3u8Parser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/M3u8Parser.js","/**\n * Checks whether the item is an ad item or not.\n *\n * @export\n * @param {Object} item\n * @returns {boolean}\n */\nexport default function isAdItem(item) {\n    // Non media items are certenly not ad items.\n    if (item.type !== 'media' || !item.parallel) {\n        return false;\n    }\n\n    // Search for a vast item.\n    return !!item.parallel.find(parallelItem => parallelItem.type === 'vmap');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/isAdItem.js","module.exports = {\"name\":\"@meisterplayer/plugin-nativehls\",\"version\":\"5.6.1\",\"description\":\"Meister plugin for playback of HLS in browsers that support it natively (ex. Safari)\",\"main\":\"dist/NativeHls.js\",\"keywords\":[\"meister\",\"video\",\"plugin\",\"hls\"],\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/meisterplayer/media-nativehls.git\"},\"scripts\":{\"lint\":\"eslint ./src/js\",\"test\":\"jest\",\"test:coverage\":\"jest --coverage\",\"build\":\"gulp build\",\"dist\":\"gulp build:min && gulp build:dist\"},\"author\":\"Triple\",\"license\":\"Apache-2.0\",\"dependencies\":{},\"devDependencies\":{\"@meisterplayer/meister-mock\":\"1.0.0\",\"babel-preset-es2015\":\"6.24.0\",\"babel-preset-es2017\":\"6.22.0\",\"gulp\":\"3.9.1\",\"jest\":\"20.0.4\",\"meister-gulp-webpack-tasks\":\"1.0.6\",\"meister-js-dev\":\"3.1.0\"},\"peerDependencies\":{\"@meisterplayer/meisterplayer\":\">= 5.1.0\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}